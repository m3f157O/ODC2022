0x000000000042ffff: add byte ptr [rax - 0x75], cl; int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fbff: add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fdff: add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043553b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000042fbfd: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fdfd: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000484e3f: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0x448]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000042f2ac: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043553c: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000484dc0: add byte ptr [rax], al; jne 0x84e68; mov rdx, qword ptr [rbx + 0x18]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000042f28e: add byte ptr [rax], al; mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000484dd6: add byte ptr [rax], al; mov rax, qword ptr [rbx + 0x18]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000042fbfe: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fdfe: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fffe: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000046079c: add byte ptr [rax], al; mov rdi, r14; mov dword ptr [rbp - 0x4e8], r9d; mov rdx, qword ptr [rbp - 0x518]; mov rsi, qword ptr [rbp - 0x530]; call qword ptr [rax + 0x38]; 
0x0000000000484dc6: add byte ptr [rax], al; mov rdx, qword ptr [rbx + 0x18]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000484e41: add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0x448]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000401180: add byte ptr [rax], al; mov rdx, qword ptr [rip + 0x2bac1f]; mov rsi, qword ptr [rsp + 0x10]; mov edi, dword ptr [rsp + 0xc]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x00000000004354ce: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043545e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004353ee: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043530e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043529e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000043522e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000434cde: add byte ptr [rax], al; mov rdx, qword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000434b4e: add byte ptr [rax], al; mov rdx, qword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000434abe: add byte ptr [rax], al; mov rdx, qword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042f2ae: add byte ptr [rax], al; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434d5e: add byte ptr [rax], al; mov rdx, qword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043553e: add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000045dd06: add byte ptr [rax], al; mov rsi, qword ptr [r15 + 0x18]; mov rdx, qword ptr [r15 + 0x20]; mov rdi, qword ptr [rbp - 0x8a8]; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000044416d: add byte ptr [rax], r8b; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x00000000004852e0: add byte ptr [rbx + 0xc], dh; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000474223: add byte ptr [rcx + rcx*4 - 7], cl; mov rdx, qword ptr [rsp + 0x10]; mov rsi, qword ptr [rsp + 0x18]; mov rdi, rbp; mov r9, r14; call rbx; 
0x000000000046079d: add byte ptr [rcx + rcx*4 - 9], cl; mov dword ptr [rbp - 0x4e8], r9d; mov rdx, qword ptr [rbp - 0x518]; mov rsi, qword ptr [rbp - 0x530]; call qword ptr [rax + 0x38]; 
0x000000000045dd07: add byte ptr [rcx - 0x75], cl; ja 0x5dd24; mov rdx, qword ptr [r15 + 0x20]; mov rdi, qword ptr [rbp - 0x8a8]; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x00000000004852dc: add eax, 0x236e8f; jae 0x852ef; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x00000000004852d8: add eax, edx; cmp rax, qword ptr [rip + 0x236e8f]; jae 0x852ef; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x00000000004852d7: add rax, rdx; cmp rax, qword ptr [rip + 0x236e8f]; jae 0x852ef; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000482556: and al, 0x18; mov rdx, qword ptr [rsp + 0x10]; call rdx; 
0x0000000000481b1a: and al, 0x28; mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000000481aa8: and al, 0x28; mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000481b1f: and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000000481aad: and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000413bbb: and al, 8; call 0x12850; mov rdx, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x000000000048d484: and byte ptr [rcx - 0x77], cl; fmul dword ptr [rcx + rcx*4 - 0x1f]; mov rdx, qword ptr [r12]; mov esi, 1; mov edi, 1; call rax; 
0x00000000004852df: and eax, dword ptr [rax]; jae 0x852ef; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000413bbd: call 0x12850; mov rdx, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x00000000004585c4: call 0x4d3c0; mov rdx, qword ptr [rbp - 0x98]; mov rdi, r14; call rdx; 
0x000000000042f273: call 0xfffffffff0617dc4; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000431c43: call 0xfffffffff061a794; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004852db: cmp eax, dword ptr [rip + 0x236e8f]; jae 0x852ef; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x00000000004852da: cmp rax, qword ptr [rip + 0x236e8f]; jae 0x852ef; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000048d487: fmul dword ptr [rcx + rcx*4 - 0x1f]; mov rdx, qword ptr [r12]; mov esi, 1; mov edi, 1; call rax; 
0x000000000048cdd1: fmul dword ptr [rcx + rcx*4 - 0x1f]; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x000000000042ffe7: int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000430003: int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000045dd0a: ja 0x5dd24; mov rdx, qword ptr [r15 + 0x20]; mov rdi, qword ptr [rbp - 0x8a8]; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x00000000004852e1: jae 0x852ef; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x00000000004111d4: jne 0x111dd; mov rdx, qword ptr [r15 + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x00000000004132a8: jne 0x132b1; mov rdx, qword ptr [rbx + 0x40]; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbx; call rax; 
0x000000000048254f: jne 0x825a0; mov ebx, eax; mov rdi, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x10]; call rdx; 
0x0000000000484dc2: jne 0x84e68; mov rdx, qword ptr [rbx + 0x18]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000484e3d: mov dword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x448]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004607a2: mov dword ptr [rbp - 0x4e8], ecx; mov rdx, qword ptr [rbp - 0x518]; mov rsi, qword ptr [rbp - 0x530]; call qword ptr [rax + 0x38]; 
0x00000000004607a1: mov dword ptr [rbp - 0x4e8], r9d; mov rdx, qword ptr [rbp - 0x518]; mov rsi, qword ptr [rbp - 0x530]; call qword ptr [rax + 0x38]; 
0x00000000004585be: mov dword ptr [rbp - 0x98], edx; call 0x4d3c0; mov rdx, qword ptr [rbp - 0x98]; mov rdi, r14; call rdx; 
0x0000000000484e39: mov eax, dword ptr [rbx + 0x18]; mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x448]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000484dd9: mov eax, dword ptr [rbx + 0x18]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000048d486: mov eax, ebx; mov rcx, r12; mov rdx, qword ptr [r12]; mov esi, 1; mov edi, 1; call rax; 
0x000000000048cdd0: mov eax, ebx; mov rcx, r12; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x000000000048cea0: mov eax, esp; mov rcx, rbp; mov rdx, qword ptr [rbp]; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000042f291: mov ebx, dword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f275: mov ebx, dword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000481b1d: mov ebx, dword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000000481aab: mov ebx, dword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000482551: mov ebx, eax; mov rdi, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x10]; call rdx; 
0x000000000042fbe5: mov ecx, dword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fc01: mov ecx, dword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fde5: mov ecx, dword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fe01: mov ecx, dword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042ffe5: mov ecx, dword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000430001: mov ecx, dword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000444821: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x00000000004441c1: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000444841: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004441d1: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000444861: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004441e1: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x000000000048cea3: mov ecx, ebp; mov rdx, qword ptr [rbp]; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000474225: mov ecx, edi; mov rdx, qword ptr [rsp + 0x10]; mov rsi, qword ptr [rsp + 0x18]; mov rdi, rbp; mov r9, r14; call rbx; 
0x000000000048d489: mov ecx, esp; mov rdx, qword ptr [r12]; mov esi, 1; mov edi, 1; call rax; 
0x000000000048cdd3: mov ecx, esp; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x0000000000482554: mov edi, dword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x10]; call rdx; 
0x00000000004585bb: mov edi, edx; mov qword ptr [rbp - 0x98], rdx; call 0x4d3c0; mov rdx, qword ptr [rbp - 0x98]; mov rdi, r14; call rdx; 
0x000000000046079f: mov edi, esi; mov dword ptr [rbp - 0x4e8], r9d; mov rdx, qword ptr [rbp - 0x518]; mov rsi, qword ptr [rbp - 0x530]; call qword ptr [rax + 0x38]; 
0x000000000045dd09: mov esi, dword ptr [rdi + 0x18]; mov rdx, qword ptr [r15 + 0x20]; mov rdi, qword ptr [rbp - 0x8a8]; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x0000000000484e3c: mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x448]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004585bd: mov qword ptr [rbp - 0x98], rdx; call 0x4d3c0; mov rdx, qword ptr [rbp - 0x98]; mov rdi, r14; call rdx; 
0x000000000042f290: mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f274: mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000481b1c: mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000000481aaa: mov r11, qword ptr [rsp + 0x30]; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000000482550: mov r11, r8; mov rdi, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x10]; call rdx; 
0x000000000048ce9f: mov r8, r12; mov rcx, rbp; mov rdx, qword ptr [rbp]; mov esi, 0xa; mov edi, 1; call rax; 
0x000000000048d485: mov r8, rbx; mov rcx, r12; mov rdx, qword ptr [r12]; mov esi, 1; mov edi, 1; call rax; 
0x000000000048cdcf: mov r8, rbx; mov rcx, r12; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x0000000000484e38: mov rax, qword ptr [rbx + 0x18]; mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x448]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000484dd8: mov rax, qword ptr [rbx + 0x18]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000042fbe4: mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fc00: mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fde4: mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fe00: mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042ffe4: mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000430000: mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000444820: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x00000000004441c0: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000444840: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004441d0: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000444860: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004441e0: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x000000000048d488: mov rcx, r12; mov rdx, qword ptr [r12]; mov esi, 1; mov edi, 1; call rax; 
0x000000000048cdd2: mov rcx, r12; or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x0000000000474224: mov rcx, r15; mov rdx, qword ptr [rsp + 0x10]; mov rsi, qword ptr [rsp + 0x18]; mov rdi, rbp; mov r9, r14; call rbx; 
0x000000000048cea2: mov rcx, rbp; mov rdx, qword ptr [rbp]; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000482553: mov rdi, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x10]; call rdx; 
0x000000000046079e: mov rdi, r14; mov dword ptr [rbp - 0x4e8], r9d; mov rdx, qword ptr [rbp - 0x518]; mov rsi, qword ptr [rbp - 0x530]; call qword ptr [rax + 0x38]; 
0x00000000004585ba: mov rdi, rdx; mov qword ptr [rbp - 0x98], rdx; call 0x4d3c0; mov rdx, qword ptr [rbp - 0x98]; mov rdi, r14; call rdx; 
0x000000000048cdd8: mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x000000000048d48b: mov rdx, qword ptr [r12]; mov esi, 1; mov edi, 1; call rax; 
0x0000000000469226: mov rdx, qword ptr [r14 + 0x20]; mov rdi, qword ptr [rbp - 0x8d0]; sub rdx, rsi; sar rdx, 2; call qword ptr [rbx + 0x38]; 
0x000000000045dd0c: mov rdx, qword ptr [r15 + 0x20]; mov rdi, qword ptr [rbp - 0x8a8]; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x00000000004111d6: mov rdx, qword ptr [r15 + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x00000000004182ff: mov rdx, qword ptr [rax + 8]; jne 0x18310; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x00000000004607a8: mov rdx, qword ptr [rbp - 0x518]; mov rsi, qword ptr [rbp - 0x530]; call qword ptr [rax + 0x38]; 
0x00000000004585c9: mov rdx, qword ptr [rbp - 0x98]; mov rdi, r14; call rdx; 
0x000000000048cea5: mov rdx, qword ptr [rbp]; mov esi, 0xa; mov edi, 1; call rax; 
0x0000000000484dc8: mov rdx, qword ptr [rbx + 0x18]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x00000000004132aa: mov rdx, qword ptr [rbx + 0x40]; sub rdx, rsi; mov qword ptr [rsp], rcx; mov rdi, rbx; call rax; 
0x000000000044bf35: mov rdx, qword ptr [rcx + rdx]; lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000416436: mov rdx, qword ptr [rdi + 0x18]; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000484ddc: mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000484e43: mov rdx, qword ptr [rdi + 0x448]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004852e3: mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000401182: mov rdx, qword ptr [rip + 0x2bac1f]; mov rsi, qword ptr [rsp + 0x10]; mov edi, dword ptr [rsp + 0xc]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000444314: mov rdx, qword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000444334: mov rdx, qword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004354d0: mov rdx, qword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000435460: mov rdx, qword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004353f0: mov rdx, qword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000435380: mov rdx, qword ptr [rsi + 4]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000444823: mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x00000000004441c3: mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000435310: mov rdx, qword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000444843: mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004441d3: mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004352a0: mov rdx, qword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000444863: mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004441e3: mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000435230: mov rdx, qword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000434ce0: mov rdx, qword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000434c60: mov rdx, qword ptr [rsi - 0xb]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000434be0: mov rdx, qword ptr [rsi - 0xc]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000434b50: mov rdx, qword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000434ac0: mov rdx, qword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000434a30: mov rdx, qword ptr [rsi - 0xf]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042f294: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fbe8: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fde8: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042ffe8: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f278: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fc04: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042fe04: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000430004: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f2b0: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434d60: mov rdx, qword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004447a0: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x0000000000435540: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000482558: mov rdx, qword ptr [rsp + 0x10]; call rdx; 
0x000000000040df60: mov rdx, qword ptr [rsp + 0x10]; mov rsi, qword ptr [r15]; mov rdi, qword ptr [r13]; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000474227: mov rdx, qword ptr [rsp + 0x10]; mov rsi, qword ptr [rsp + 0x18]; mov rdi, rbp; mov r9, r14; call rbx; 
0x000000000040dff0: mov rdx, qword ptr [rsp + 0x10]; mov rsi, r15; mov rdi, r13; mov rax, qword ptr [rsp + 8]; call rax; 
0x0000000000481b21: mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000000481aaf: mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000000045118a: mov rdx, qword ptr [rsp + 0x48]; mov rsi, qword ptr [rsp + 0x40]; mov rdi, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 0x18]; call rax; 
0x0000000000413bc2: mov rdx, qword ptr [rsp + 8]; mov rsi, r13; mov rdi, rbx; call qword ptr [rbp + 0x70]; 
0x0000000000449a35: mov rdx, qword ptr [rsp]; mov r8d, eax; mov esi, 7; mov edi, dword ptr [rsp + 0xc]; mov eax, 0x48; syscall; 
0x000000000045dd08: mov rsi, qword ptr [r15 + 0x18]; mov rdx, qword ptr [r15 + 0x20]; mov rdi, qword ptr [rbp - 0x8a8]; sub rdx, rsi; call qword ptr [rbx + 0x38]; 
0x000000000044416b: nop dword ptr [rax + rax]; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x00000000004441bd: nop dword ptr [rax]; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000435539: nop dword ptr [rax]; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x00000000004441cf: nop; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004441df: nop; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x000000000044479f: nop; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x000000000048cdd5: or esi, 2; mov rdx, qword ptr [r12]; mov edi, 1; call rax; 
0x00000000004852de: outsb dx, byte ptr [rsi]; and eax, dword ptr [rax]; jae 0x852ef; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000481b1e: pop rsp; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000000481aac: pop rsp; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000004111d3: retf 0x775; mov rdx, qword ptr [r15 + 0x40]; sub rdx, rsi; mov qword ptr [rsp + 8], rcx; mov rdi, r15; call rax; 
0x00000000004852d9: ror byte ptr [rax + 0x3b], 1; add eax, 0x236e8f; jae 0x852ef; mov rdx, qword ptr [rip + 0x236e8e]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000046079b: sbb byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 9], cl; mov dword ptr [rbp - 0x4e8], r9d; mov rdx, qword ptr [rbp - 0x518]; mov rsi, qword ptr [rbp - 0x530]; call qword ptr [rax + 0x38]; 
0x000000000044bf32: shl edx, 4; mov rdx, qword ptr [rcx + rdx]; lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000044bf31: shl rdx, 4; mov rdx, qword ptr [rcx + rdx]; lea rcx, [rip - 0x60]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000474226: stc; mov rdx, qword ptr [rsp + 0x10]; mov rsi, qword ptr [rsp + 0x18]; mov rdi, rbp; mov r9, r14; call rbx; 
0x0000000000481b1b: sub byte ptr [rbx + rcx*4 + 0x5c], cl; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000000481aa9: sub byte ptr [rbx + rcx*4 + 0x5c], cl; and al, 0x30; mov rdx, qword ptr [rsp + 0x38]; mov rcx, qword ptr [rsp + 0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000004607a0: test dword ptr [rcx + rcx*4 - 0x73], 0xfffffb18; mov rdx, qword ptr [rbp - 0x518]; mov rsi, qword ptr [rbp - 0x530]; call qword ptr [rax + 0x38]; 
0x000000000048254d: test eax, eax; jne 0x825a0; mov ebx, eax; mov rdi, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x10]; call rdx; 
0x00000000004585bc: xlatb; mov qword ptr [rbp - 0x98], rdx; call 0x4d3c0; mov rdx, qword ptr [rbp - 0x98]; mov rdi, r14; call rdx; 
0x0000000000482549: xor eax, dword ptr [rdi - 0x3f7a0003]; jne 0x825a0; mov ebx, eax; mov rdi, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x10]; call rdx; 
